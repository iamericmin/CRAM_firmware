ARM GAS  /tmp/ccHwkgRn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_DMA_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_DMA_Init:
  26              	.LFB253:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /*
   2:Core/Src/main.c ****  ______     ______     ______     __    __    
   3:Core/Src/main.c **** /\  ___\   /\  == \   /\  __ \   /\ "-./  \   
   4:Core/Src/main.c **** \ \ \____  \ \  __<   \ \  __ \  \ \ \-./\ \  
   5:Core/Src/main.c ****  \ \_____\  \ \_\ \_\  \ \_\ \_\  \ \_\ \ \_\ 
   6:Core/Src/main.c ****   \/_____/   \/_/ /_/   \/_/\/_/   \/_/  \/_/
   7:Core/Src/main.c **** COMPACT RAPID ACQUISITION MACHINE
   8:Core/Src/main.c **** Purdue Formula SAE 2024
   9:Core/Src/main.c **** Eric Min
  10:Core/Src/main.c **** */
  11:Core/Src/main.c **** #include "main.h"
  12:Core/Src/main.c **** #include "stdio.h"
  13:Core/Src/main.c **** #include "string.h"
  14:Core/Src/main.c **** #include "stm32f4xx_hal.h"
  15:Core/Src/main.c **** #include "stm32f407xx.h"
  16:Core/Src/main.c **** #include "stm32f4xx_hal_can.h"
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  19:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  20:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  21:Core/Src/main.c **** SD_HandleTypeDef hsd;
  22:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  23:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  24:Core/Src/main.c **** UART_HandleTypeDef huart3;
  25:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  26:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  27:Core/Src/main.c **** CAN_FilterTypeDef can1Filter;
  28:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/main.c **** TIM_HandleTypeDef hdma_tim1_ch1;
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** #define NUM_LOAD_CELLS 4
ARM GAS  /tmp/ccHwkgRn.s 			page 2


  32:Core/Src/main.c **** #define ADC_BUF_LEN 4096
  33:Core/Src/main.c **** #define TX_BUF_LEN 100
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** void SystemClock_Config(void);
  36:Core/Src/main.c **** static void MX_GPIO_Init(void);
  37:Core/Src/main.c **** static void MX_ADC1_Init(void);
  38:Core/Src/main.c **** static void MX_CAN1_Init(void);
  39:Core/Src/main.c **** static void MX_CAN2_Init(void);
  40:Core/Src/main.c **** static void MX_RTC_Init(void);
  41:Core/Src/main.c **** static void MX_I2C1_Init(void);
  42:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  43:Core/Src/main.c **** static void MX_SPI1_Init(void);
  44:Core/Src/main.c **** static void MX_SPI2_Init(void);
  45:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  46:Core/Src/main.c **** static void MX_DMA_Init(void);
  47:Core/Src/main.c **** static void MX_TIM1_Init(void);
  48:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc);
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** uint16_t adcData[ADC_BUF_LEN];
  51:Core/Src/main.c **** uint8_t UART_txBuf[TX_BUF_LEN];
  52:Core/Src/main.c **** uint8_t adc_conv_complete_flag = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /**
  55:Core/Src/main.c ****   * @brief  Application main loop
  56:Core/Src/main.c ****   * @retval int
  57:Core/Src/main.c **** */
  58:Core/Src/main.c **** int main(void) {
  59:Core/Src/main.c ****   HAL_Init();
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   SystemClock_Config();
  62:Core/Src/main.c **** 
  63:Core/Src/main.c ****   MX_DMA_Init(); // THIS CALL SHOULD GO BEFORE ANY OTHER PERIPHERAL INIT CALL. IF NOT, NOTHING WORK
  64:Core/Src/main.c ****   MX_GPIO_Init();
  65:Core/Src/main.c ****   MX_ADC1_Init();
  66:Core/Src/main.c ****   MX_CAN1_Init();
  67:Core/Src/main.c ****   MX_USART3_UART_Init();
  68:Core/Src/main.c ****   MX_TIM1_Init();
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   CAN_TxHeaderTypeDef CAN_loadCellHandler;
  71:Core/Src/main.c ****   uint8_t loadCellDataFrame[8];
  72:Core/Src/main.c ****   CAN_loadCellHandler.StdId = 0x5AE;
  73:Core/Src/main.c ****   CAN_loadCellHandler.ExtId = 0x5AE;
  74:Core/Src/main.c ****   CAN_loadCellHandler.RTR = CAN_RTR_DATA;
  75:Core/Src/main.c ****   CAN_loadCellHandler.IDE = CAN_ID_STD;
  76:Core/Src/main.c ****   CAN_loadCellHandler.DLC = sizeof(loadCellDataFrame);
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   uint32_t txMailbox;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   //HAL_CAN_Start(&hcan1);
  81:Core/Src/main.c ****   uint32_t currentTime = HAL_GetTick();
  82:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)adcData, ADC_BUF_LEN);
  83:Core/Src/main.c ****   //while(HAL_GetTick() - currentTime <= 3000) {
  84:Core/Src/main.c ****   for (;;) {
  85:Core/Src/main.c ****     snprintf(UART_txBuf, TX_BUF_LEN, "PA0: %d, PA1: %d, PA2: %d, PA3: %d\r\n", adcData[0], adcData[
  86:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
  87:Core/Src/main.c ****     HAL_Delay(100);
  88:Core/Src/main.c ****   }
ARM GAS  /tmp/ccHwkgRn.s 			page 3


  89:Core/Src/main.c **** }
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc){
  92:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, 1);
  93:Core/Src/main.c **** }
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
  96:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_6);
  97:Core/Src/main.c **** }
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** int configureCAN1() {
 100:Core/Src/main.c ****   can1Filter.FilterActivation = CAN_FILTER_ENABLE;
 101:Core/Src/main.c ****   can1Filter.FilterBank = 18;  // which filter bank to use from the assigned ones
 102:Core/Src/main.c ****   can1Filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 103:Core/Src/main.c ****   can1Filter.FilterIdHigh = 0x446<<5;
 104:Core/Src/main.c ****   can1Filter.FilterIdLow = 0;
 105:Core/Src/main.c ****   can1Filter.FilterMaskIdHigh = 0x446<<5;
 106:Core/Src/main.c ****   can1Filter.FilterMaskIdLow = 0x0000;
 107:Core/Src/main.c ****   can1Filter.FilterMode = CAN_FILTERMODE_IDMASK;
 108:Core/Src/main.c ****   can1Filter.FilterScale = CAN_FILTERSCALE_32BIT;
 109:Core/Src/main.c ****   can1Filter.SlaveStartFilterBank = 20;  // how many filters to assign to the CAN1 (master can)
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &can1Filter);
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccHwkgRn.s 			page 4


 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 162:Core/Src/main.c ****   * @param None
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** static void MX_ADC1_Init(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   hadc1.Instance = ADC1;
 181:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 182:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 183:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 184:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 185:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 186:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 187:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 188:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 189:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 190:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 191:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 192:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 200:Core/Src/main.c ****   sConfig.Rank = 1;
 201:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 202:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  /tmp/ccHwkgRn.s 			page 5


 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 210:Core/Src/main.c ****   sConfig.Rank = 2;
 211:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 219:Core/Src/main.c ****   sConfig.Rank = 3;
 220:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 228:Core/Src/main.c ****   sConfig.Rank = 4;
 229:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 241:Core/Src/main.c ****   * @param None
 242:Core/Src/main.c ****   * @retval None
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c **** static void MX_CAN1_Init(void)
 245:Core/Src/main.c **** {
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 254:Core/Src/main.c ****   hcan1.Instance = CAN1;
 255:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 256:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 257:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 258:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 259:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
ARM GAS  /tmp/ccHwkgRn.s 			page 6


 260:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 261:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 262:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 263:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 264:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 265:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 266:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief CAN2 Initialization Function
 278:Core/Src/main.c ****   * @param None
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** static void MX_CAN2_Init(void)
 282:Core/Src/main.c **** {
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 291:Core/Src/main.c ****   hcan2.Instance = CAN2;
 292:Core/Src/main.c ****   hcan2.Init.Prescaler = 32;
 293:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_LOOPBACK;
 294:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 295:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 296:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 297:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 298:Core/Src/main.c ****   hcan2.Init.AutoBusOff = ENABLE;
 299:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 300:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 301:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 302:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 303:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** }
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 315:Core/Src/main.c ****   * @param None
 316:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccHwkgRn.s 			page 7


 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** static void MX_I2C1_Init(void)
 319:Core/Src/main.c **** {
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 328:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 329:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 330:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 331:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 332:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 333:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 334:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 335:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 336:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 337:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 338:Core/Src/main.c ****   {
 339:Core/Src/main.c ****     Error_Handler();
 340:Core/Src/main.c ****   }
 341:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** }
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** /**
 348:Core/Src/main.c ****   * @brief RTC Initialization Function
 349:Core/Src/main.c ****   * @param None
 350:Core/Src/main.c ****   * @retval None
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c **** static void MX_RTC_Init(void)
 353:Core/Src/main.c **** {
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /** Initialize RTC Only
 364:Core/Src/main.c ****   */
 365:Core/Src/main.c ****   hrtc.Instance = RTC;
 366:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 367:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 368:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 369:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 370:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 371:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 372:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 373:Core/Src/main.c ****   {
ARM GAS  /tmp/ccHwkgRn.s 			page 8


 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief SDIO Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 388:Core/Src/main.c **** {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 397:Core/Src/main.c ****   hsd.Instance = SDIO;
 398:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 399:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 400:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 401:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_4B;
 402:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 403:Core/Src/main.c ****   hsd.Init.ClockDiv = 0;
 404:Core/Src/main.c ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   if (HAL_SD_ConfigWideBusOperation(&hsd, SDIO_BUS_WIDE_4B) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** }
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** /**
 419:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 420:Core/Src/main.c ****   * @param None
 421:Core/Src/main.c ****   * @retval None
 422:Core/Src/main.c ****   */
 423:Core/Src/main.c **** static void MX_SPI1_Init(void)
 424:Core/Src/main.c **** {
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
ARM GAS  /tmp/ccHwkgRn.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 433:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 434:Core/Src/main.c ****   hspi1.Instance = SPI1;
 435:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 436:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 437:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 438:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 439:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 440:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 441:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 442:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 443:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 444:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 445:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 446:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 458:Core/Src/main.c ****   * @param None
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** static void MX_SPI2_Init(void)
 462:Core/Src/main.c **** {
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 471:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 472:Core/Src/main.c ****   hspi2.Instance = SPI2;
 473:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 474:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 475:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 476:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 477:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 478:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 479:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 480:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 481:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 482:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 483:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 484:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 485:Core/Src/main.c ****   {
 486:Core/Src/main.c ****     Error_Handler();
 487:Core/Src/main.c ****   }
ARM GAS  /tmp/ccHwkgRn.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** }
 493:Core/Src/main.c **** 
 494:Core/Src/main.c **** /**
 495:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 496:Core/Src/main.c ****   * @param None
 497:Core/Src/main.c ****   * @retval None
 498:Core/Src/main.c ****   */
 499:Core/Src/main.c **** static void MX_TIM1_Init(void)
 500:Core/Src/main.c **** {
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 507:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 508:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 509:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 514:Core/Src/main.c ****   hdma_tim1_ch1.Instance = TIM1;
 515:Core/Src/main.c ****   hdma_tim1_ch1.Init.Prescaler = 0;
 516:Core/Src/main.c ****   hdma_tim1_ch1.Init.CounterMode = TIM_COUNTERMODE_UP;
 517:Core/Src/main.c ****   hdma_tim1_ch1.Init.Period = 200;
 518:Core/Src/main.c ****   hdma_tim1_ch1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 519:Core/Src/main.c ****   hdma_tim1_ch1.Init.RepetitionCounter = 0;
 520:Core/Src/main.c ****   hdma_tim1_ch1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 521:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&hdma_tim1_ch1) != HAL_OK)
 522:Core/Src/main.c ****   {
 523:Core/Src/main.c ****     Error_Handler();
 524:Core/Src/main.c ****   }
 525:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 526:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&hdma_tim1_ch1, &sClockSourceConfig) != HAL_OK)
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     Error_Handler();
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&hdma_tim1_ch1) != HAL_OK)
 531:Core/Src/main.c ****   {
 532:Core/Src/main.c ****     Error_Handler();
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 535:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 536:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&hdma_tim1_ch1, &sMasterConfig) != HAL_OK)
 537:Core/Src/main.c ****   {
 538:Core/Src/main.c ****     Error_Handler();
 539:Core/Src/main.c ****   }
 540:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 541:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 542:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 543:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 544:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccHwkgRn.s 			page 11


 545:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 546:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 547:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&hdma_tim1_ch1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 548:Core/Src/main.c ****   {
 549:Core/Src/main.c ****     Error_Handler();
 550:Core/Src/main.c ****   }
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 554:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 555:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 556:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 557:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 558:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&hdma_tim1_ch1, &sBreakDeadTimeConfig) != HAL_OK)
 559:Core/Src/main.c ****   {
 560:Core/Src/main.c ****     Error_Handler();
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 565:Core/Src/main.c ****   HAL_TIM_MspPostInit(&hdma_tim1_ch1);
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** }
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** /**
 570:Core/Src/main.c ****   * @brief USART3 Initialization Function
 571:Core/Src/main.c ****   * @param None
 572:Core/Src/main.c ****   * @retval None
 573:Core/Src/main.c ****   */
 574:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 575:Core/Src/main.c **** {
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 584:Core/Src/main.c ****   huart3.Instance = USART3;
 585:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 586:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 587:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 588:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 589:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 590:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 591:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 592:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 593:Core/Src/main.c ****   {
 594:Core/Src/main.c ****     Error_Handler();
 595:Core/Src/main.c ****   }
 596:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** }
 601:Core/Src/main.c **** 
ARM GAS  /tmp/ccHwkgRn.s 			page 12


 602:Core/Src/main.c **** /**
 603:Core/Src/main.c ****   * Enable DMA controller clock
 604:Core/Src/main.c ****   */
 605:Core/Src/main.c **** static void MX_DMA_Init(void)
 606:Core/Src/main.c **** {
  28              		.loc 1 606 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /* DMA controller clock enable */
 609:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
  40              		.loc 1 609 3 view .LVU1
  41              	.LBB4:
  42              		.loc 1 609 3 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0194     		str	r4, [sp, #4]
  45              		.loc 1 609 3 view .LVU3
  46 0008 0D4B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F48002 		orr	r2, r2, #4194304
  49 0010 1A63     		str	r2, [r3, #48]
  50              		.loc 1 609 3 view .LVU4
  51 0012 1B6B     		ldr	r3, [r3, #48]
  52 0014 03F48003 		and	r3, r3, #4194304
  53 0018 0193     		str	r3, [sp, #4]
  54              		.loc 1 609 3 view .LVU5
  55 001a 019B     		ldr	r3, [sp, #4]
  56              	.LBE4:
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /* DMA interrupt init */
 612:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 613:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
  57              		.loc 1 613 3 view .LVU6
  58 001c 2246     		mov	r2, r4
  59 001e 2146     		mov	r1, r4
  60 0020 3820     		movs	r0, #56
  61 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  62              	.LVL0:
 614:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
  63              		.loc 1 614 3 view .LVU7
  64 0026 3820     		movs	r0, #56
  65 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  66              	.LVL1:
 615:Core/Src/main.c ****   /* DMA2_Stream1_IRQn interrupt configuration */
 616:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
  67              		.loc 1 616 3 view .LVU8
  68 002c 2246     		mov	r2, r4
  69 002e 2146     		mov	r1, r4
ARM GAS  /tmp/ccHwkgRn.s 			page 13


  70 0030 3920     		movs	r0, #57
  71 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  72              	.LVL2:
 617:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
  73              		.loc 1 617 3 view .LVU9
  74 0036 3920     		movs	r0, #57
  75 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  76              	.LVL3:
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** }
  77              		.loc 1 619 1 is_stmt 0 view .LVU10
  78 003c 02B0     		add	sp, sp, #8
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		@ sp needed
  82 003e 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 0040 00380240 		.word	1073887232
  87              		.cfi_endproc
  88              	.LFE253:
  90              		.section	.text.MX_GPIO_Init,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	MX_GPIO_Init:
  98              	.LFB254:
 620:Core/Src/main.c **** 
 621:Core/Src/main.c **** /**
 622:Core/Src/main.c ****   * @brief GPIO Initialization Function
 623:Core/Src/main.c ****   * @param None
 624:Core/Src/main.c ****   * @retval None
 625:Core/Src/main.c ****   */
 626:Core/Src/main.c **** static void MX_GPIO_Init(void)
 627:Core/Src/main.c **** {
  99              		.loc 1 627 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 48
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103 0000 30B5     		push	{r4, r5, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 12
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 109 0002 8DB0     		sub	sp, sp, #52
 110              	.LCFI4:
 111              		.cfi_def_cfa_offset 64
 628:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 112              		.loc 1 628 3 view .LVU12
 113              		.loc 1 628 20 is_stmt 0 view .LVU13
 114 0004 0024     		movs	r4, #0
 115 0006 0794     		str	r4, [sp, #28]
 116 0008 0894     		str	r4, [sp, #32]
ARM GAS  /tmp/ccHwkgRn.s 			page 14


 117 000a 0994     		str	r4, [sp, #36]
 118 000c 0A94     		str	r4, [sp, #40]
 119 000e 0B94     		str	r4, [sp, #44]
 629:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 630:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 633:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 120              		.loc 1 633 3 is_stmt 1 view .LVU14
 121              	.LBB5:
 122              		.loc 1 633 3 view .LVU15
 123 0010 0194     		str	r4, [sp, #4]
 124              		.loc 1 633 3 view .LVU16
 125 0012 274B     		ldr	r3, .L7
 126 0014 1A6B     		ldr	r2, [r3, #48]
 127 0016 42F08002 		orr	r2, r2, #128
 128 001a 1A63     		str	r2, [r3, #48]
 129              		.loc 1 633 3 view .LVU17
 130 001c 1A6B     		ldr	r2, [r3, #48]
 131 001e 02F08002 		and	r2, r2, #128
 132 0022 0192     		str	r2, [sp, #4]
 133              		.loc 1 633 3 view .LVU18
 134 0024 019A     		ldr	r2, [sp, #4]
 135              	.LBE5:
 634:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 136              		.loc 1 634 3 view .LVU19
 137              	.LBB6:
 138              		.loc 1 634 3 view .LVU20
 139 0026 0294     		str	r4, [sp, #8]
 140              		.loc 1 634 3 view .LVU21
 141 0028 1A6B     		ldr	r2, [r3, #48]
 142 002a 42F00402 		orr	r2, r2, #4
 143 002e 1A63     		str	r2, [r3, #48]
 144              		.loc 1 634 3 view .LVU22
 145 0030 1A6B     		ldr	r2, [r3, #48]
 146 0032 02F00402 		and	r2, r2, #4
 147 0036 0292     		str	r2, [sp, #8]
 148              		.loc 1 634 3 view .LVU23
 149 0038 029A     		ldr	r2, [sp, #8]
 150              	.LBE6:
 635:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 151              		.loc 1 635 3 view .LVU24
 152              	.LBB7:
 153              		.loc 1 635 3 view .LVU25
 154 003a 0394     		str	r4, [sp, #12]
 155              		.loc 1 635 3 view .LVU26
 156 003c 1A6B     		ldr	r2, [r3, #48]
 157 003e 42F00102 		orr	r2, r2, #1
 158 0042 1A63     		str	r2, [r3, #48]
 159              		.loc 1 635 3 view .LVU27
 160 0044 1A6B     		ldr	r2, [r3, #48]
 161 0046 02F00102 		and	r2, r2, #1
 162 004a 0392     		str	r2, [sp, #12]
 163              		.loc 1 635 3 view .LVU28
 164 004c 039A     		ldr	r2, [sp, #12]
 165              	.LBE7:
 636:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/ccHwkgRn.s 			page 15


 166              		.loc 1 636 3 view .LVU29
 167              	.LBB8:
 168              		.loc 1 636 3 view .LVU30
 169 004e 0494     		str	r4, [sp, #16]
 170              		.loc 1 636 3 view .LVU31
 171 0050 1A6B     		ldr	r2, [r3, #48]
 172 0052 42F00202 		orr	r2, r2, #2
 173 0056 1A63     		str	r2, [r3, #48]
 174              		.loc 1 636 3 view .LVU32
 175 0058 1A6B     		ldr	r2, [r3, #48]
 176 005a 02F00202 		and	r2, r2, #2
 177 005e 0492     		str	r2, [sp, #16]
 178              		.loc 1 636 3 view .LVU33
 179 0060 049A     		ldr	r2, [sp, #16]
 180              	.LBE8:
 637:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 181              		.loc 1 637 3 view .LVU34
 182              	.LBB9:
 183              		.loc 1 637 3 view .LVU35
 184 0062 0594     		str	r4, [sp, #20]
 185              		.loc 1 637 3 view .LVU36
 186 0064 1A6B     		ldr	r2, [r3, #48]
 187 0066 42F00802 		orr	r2, r2, #8
 188 006a 1A63     		str	r2, [r3, #48]
 189              		.loc 1 637 3 view .LVU37
 190 006c 1A6B     		ldr	r2, [r3, #48]
 191 006e 02F00802 		and	r2, r2, #8
 192 0072 0592     		str	r2, [sp, #20]
 193              		.loc 1 637 3 view .LVU38
 194 0074 059A     		ldr	r2, [sp, #20]
 195              	.LBE9:
 638:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 196              		.loc 1 638 3 view .LVU39
 197              	.LBB10:
 198              		.loc 1 638 3 view .LVU40
 199 0076 0694     		str	r4, [sp, #24]
 200              		.loc 1 638 3 view .LVU41
 201 0078 1A6B     		ldr	r2, [r3, #48]
 202 007a 42F01002 		orr	r2, r2, #16
 203 007e 1A63     		str	r2, [r3, #48]
 204              		.loc 1 638 3 view .LVU42
 205 0080 1B6B     		ldr	r3, [r3, #48]
 206 0082 03F01003 		and	r3, r3, #16
 207 0086 0693     		str	r3, [sp, #24]
 208              		.loc 1 638 3 view .LVU43
 209 0088 069B     		ldr	r3, [sp, #24]
 210              	.LBE10:
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 641:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 211              		.loc 1 641 3 view .LVU44
 212 008a 0A4D     		ldr	r5, .L7+4
 213 008c 2246     		mov	r2, r4
 214 008e 4021     		movs	r1, #64
 215 0090 2846     		mov	r0, r5
 216 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL4:
ARM GAS  /tmp/ccHwkgRn.s 			page 16


 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 644:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 218              		.loc 1 644 3 view .LVU45
 219              		.loc 1 644 23 is_stmt 0 view .LVU46
 220 0096 4023     		movs	r3, #64
 221 0098 0793     		str	r3, [sp, #28]
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 222              		.loc 1 645 3 is_stmt 1 view .LVU47
 223              		.loc 1 645 24 is_stmt 0 view .LVU48
 224 009a 0123     		movs	r3, #1
 225 009c 0893     		str	r3, [sp, #32]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 646 3 is_stmt 1 view .LVU49
 227              		.loc 1 646 24 is_stmt 0 view .LVU50
 228 009e 0994     		str	r4, [sp, #36]
 647:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 229              		.loc 1 647 3 is_stmt 1 view .LVU51
 230              		.loc 1 647 25 is_stmt 0 view .LVU52
 231 00a0 0A94     		str	r4, [sp, #40]
 648:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 232              		.loc 1 648 3 is_stmt 1 view .LVU53
 233 00a2 07A9     		add	r1, sp, #28
 234 00a4 2846     		mov	r0, r5
 235 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 236              	.LVL5:
 649:Core/Src/main.c **** 
 650:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 651:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 652:Core/Src/main.c **** }
 237              		.loc 1 652 1 is_stmt 0 view .LVU54
 238 00aa 0DB0     		add	sp, sp, #52
 239              	.LCFI5:
 240              		.cfi_def_cfa_offset 12
 241              		@ sp needed
 242 00ac 30BD     		pop	{r4, r5, pc}
 243              	.L8:
 244 00ae 00BF     		.align	2
 245              	.L7:
 246 00b0 00380240 		.word	1073887232
 247 00b4 00100240 		.word	1073876992
 248              		.cfi_endproc
 249              	.LFE254:
 251              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 252              		.align	1
 253              		.global	HAL_ADC_ConvHalfCpltCallback
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	HAL_ADC_ConvHalfCpltCallback:
 260              	.LVL6:
 261              	.LFB239:
  91:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, 1);
 262              		.loc 1 91 59 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHwkgRn.s 			page 17


 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
  93:Core/Src/main.c **** 
 267              		.loc 1 93 1 view .LVU56
 268 0000 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE239:
 272              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 273              		.align	1
 274              		.global	HAL_ADC_ConvCpltCallback
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	HAL_ADC_ConvCpltCallback:
 281              	.LVL7:
 282              	.LFB240:
  95:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_6);
 283              		.loc 1 95 56 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_6);
 287              		.loc 1 95 56 is_stmt 0 view .LVU58
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
  96:Core/Src/main.c **** }
 293              		.loc 1 96 3 is_stmt 1 view .LVU59
 294 0002 4021     		movs	r1, #64
 295 0004 0148     		ldr	r0, .L12
 296              	.LVL8:
  96:Core/Src/main.c **** }
 297              		.loc 1 96 3 is_stmt 0 view .LVU60
 298 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 299              	.LVL9:
  97:Core/Src/main.c **** 
 300              		.loc 1 97 1 view .LVU61
 301 000a 08BD     		pop	{r3, pc}
 302              	.L13:
 303              		.align	2
 304              	.L12:
 305 000c 00100240 		.word	1073876992
 306              		.cfi_endproc
 307              	.LFE240:
 309              		.section	.text.configureCAN1,"ax",%progbits
 310              		.align	1
 311              		.global	configureCAN1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	configureCAN1:
 318              	.LFB241:
  99:Core/Src/main.c ****   can1Filter.FilterActivation = CAN_FILTER_ENABLE;
ARM GAS  /tmp/ccHwkgRn.s 			page 18


 319              		.loc 1 99 21 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI7:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 100:Core/Src/main.c ****   can1Filter.FilterBank = 18;  // which filter bank to use from the assigned ones
 328              		.loc 1 100 3 view .LVU63
 100:Core/Src/main.c ****   can1Filter.FilterBank = 18;  // which filter bank to use from the assigned ones
 329              		.loc 1 100 31 is_stmt 0 view .LVU64
 330 0002 0A49     		ldr	r1, .L16
 331 0004 0122     		movs	r2, #1
 332 0006 0A62     		str	r2, [r1, #32]
 101:Core/Src/main.c ****   can1Filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 333              		.loc 1 101 3 is_stmt 1 view .LVU65
 101:Core/Src/main.c ****   can1Filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 334              		.loc 1 101 25 is_stmt 0 view .LVU66
 335 0008 1223     		movs	r3, #18
 336 000a 4B61     		str	r3, [r1, #20]
 102:Core/Src/main.c ****   can1Filter.FilterIdHigh = 0x446<<5;
 337              		.loc 1 102 3 is_stmt 1 view .LVU67
 102:Core/Src/main.c ****   can1Filter.FilterIdHigh = 0x446<<5;
 338              		.loc 1 102 35 is_stmt 0 view .LVU68
 339 000c 0023     		movs	r3, #0
 340 000e 0B61     		str	r3, [r1, #16]
 103:Core/Src/main.c ****   can1Filter.FilterIdLow = 0;
 341              		.loc 1 103 3 is_stmt 1 view .LVU69
 103:Core/Src/main.c ****   can1Filter.FilterIdLow = 0;
 342              		.loc 1 103 27 is_stmt 0 view .LVU70
 343 0010 48F6C000 		movw	r0, #35008
 344 0014 0860     		str	r0, [r1]
 104:Core/Src/main.c ****   can1Filter.FilterMaskIdHigh = 0x446<<5;
 345              		.loc 1 104 3 is_stmt 1 view .LVU71
 104:Core/Src/main.c ****   can1Filter.FilterMaskIdHigh = 0x446<<5;
 346              		.loc 1 104 26 is_stmt 0 view .LVU72
 347 0016 4B60     		str	r3, [r1, #4]
 105:Core/Src/main.c ****   can1Filter.FilterMaskIdLow = 0x0000;
 348              		.loc 1 105 3 is_stmt 1 view .LVU73
 105:Core/Src/main.c ****   can1Filter.FilterMaskIdLow = 0x0000;
 349              		.loc 1 105 31 is_stmt 0 view .LVU74
 350 0018 8860     		str	r0, [r1, #8]
 106:Core/Src/main.c ****   can1Filter.FilterMode = CAN_FILTERMODE_IDMASK;
 351              		.loc 1 106 3 is_stmt 1 view .LVU75
 106:Core/Src/main.c ****   can1Filter.FilterMode = CAN_FILTERMODE_IDMASK;
 352              		.loc 1 106 30 is_stmt 0 view .LVU76
 353 001a CB60     		str	r3, [r1, #12]
 107:Core/Src/main.c ****   can1Filter.FilterScale = CAN_FILTERSCALE_32BIT;
 354              		.loc 1 107 3 is_stmt 1 view .LVU77
 107:Core/Src/main.c ****   can1Filter.FilterScale = CAN_FILTERSCALE_32BIT;
 355              		.loc 1 107 25 is_stmt 0 view .LVU78
 356 001c 8B61     		str	r3, [r1, #24]
 108:Core/Src/main.c ****   can1Filter.SlaveStartFilterBank = 20;  // how many filters to assign to the CAN1 (master can)
 357              		.loc 1 108 3 is_stmt 1 view .LVU79
 108:Core/Src/main.c ****   can1Filter.SlaveStartFilterBank = 20;  // how many filters to assign to the CAN1 (master can)
ARM GAS  /tmp/ccHwkgRn.s 			page 19


 358              		.loc 1 108 26 is_stmt 0 view .LVU80
 359 001e CA61     		str	r2, [r1, #28]
 109:Core/Src/main.c **** 
 360              		.loc 1 109 3 is_stmt 1 view .LVU81
 109:Core/Src/main.c **** 
 361              		.loc 1 109 35 is_stmt 0 view .LVU82
 362 0020 1423     		movs	r3, #20
 363 0022 4B62     		str	r3, [r1, #36]
 111:Core/Src/main.c **** }
 364              		.loc 1 111 3 is_stmt 1 view .LVU83
 365 0024 0248     		ldr	r0, .L16+4
 366 0026 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 367              	.LVL10:
 112:Core/Src/main.c **** 
 368              		.loc 1 112 1 is_stmt 0 view .LVU84
 369 002a 08BD     		pop	{r3, pc}
 370              	.L17:
 371              		.align	2
 372              	.L16:
 373 002c 00000000 		.word	can1Filter
 374 0030 00000000 		.word	hcan1
 375              		.cfi_endproc
 376              	.LFE241:
 378              		.section	.text.Error_Handler,"ax",%progbits
 379              		.align	1
 380              		.global	Error_Handler
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	Error_Handler:
 387              	.LFB255:
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 655:Core/Src/main.c **** 
 656:Core/Src/main.c **** /* USER CODE END 4 */
 657:Core/Src/main.c **** 
 658:Core/Src/main.c **** /**
 659:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 660:Core/Src/main.c ****   * @retval None
 661:Core/Src/main.c ****   */
 662:Core/Src/main.c **** void Error_Handler(void)
 663:Core/Src/main.c **** {
 388              		.loc 1 663 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ Volatile: function does not return.
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 664:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 665:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 666:Core/Src/main.c ****   __disable_irq();
 394              		.loc 1 666 3 view .LVU86
 395              	.LBB11:
 396              	.LBI11:
 397              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /tmp/ccHwkgRn.s 			page 20


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /tmp/ccHwkgRn.s 			page 21


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHwkgRn.s 			page 22


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 398              		.loc 2 140 27 view .LVU87
 399              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 400              		.loc 2 142 3 view .LVU88
 401              		.syntax unified
 402              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 403 0000 72B6     		cpsid i
 404              	@ 0 "" 2
 405              		.thumb
 406              		.syntax unified
 407              	.L19:
 408              	.LBE12:
 409              	.LBE11:
 667:Core/Src/main.c ****   while (1)
 410              		.loc 1 667 3 discriminator 1 view .LVU89
 668:Core/Src/main.c ****   {
 669:Core/Src/main.c ****   }
 411              		.loc 1 669 3 discriminator 1 view .LVU90
 412 0002 FEE7     		b	.L19
 413              		.cfi_endproc
 414              	.LFE255:
 416              		.section	.text.MX_ADC1_Init,"ax",%progbits
 417              		.align	1
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	MX_ADC1_Init:
 424              	.LFB243:
 166:Core/Src/main.c **** 
 425              		.loc 1 166 1 view -0
ARM GAS  /tmp/ccHwkgRn.s 			page 23


 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 00B5     		push	{lr}
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 14, -4
 433 0002 85B0     		sub	sp, sp, #20
 434              	.LCFI9:
 435              		.cfi_def_cfa_offset 24
 172:Core/Src/main.c **** 
 436              		.loc 1 172 3 view .LVU92
 172:Core/Src/main.c **** 
 437              		.loc 1 172 26 is_stmt 0 view .LVU93
 438 0004 0023     		movs	r3, #0
 439 0006 0093     		str	r3, [sp]
 440 0008 0193     		str	r3, [sp, #4]
 441 000a 0293     		str	r3, [sp, #8]
 442 000c 0393     		str	r3, [sp, #12]
 180:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 443              		.loc 1 180 3 is_stmt 1 view .LVU94
 180:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 444              		.loc 1 180 18 is_stmt 0 view .LVU95
 445 000e 2548     		ldr	r0, .L32
 446 0010 254A     		ldr	r2, .L32+4
 447 0012 0260     		str	r2, [r0]
 181:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 448              		.loc 1 181 3 is_stmt 1 view .LVU96
 181:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 449              		.loc 1 181 29 is_stmt 0 view .LVU97
 450 0014 4FF48032 		mov	r2, #65536
 451 0018 4260     		str	r2, [r0, #4]
 182:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 452              		.loc 1 182 3 is_stmt 1 view .LVU98
 182:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 453              		.loc 1 182 25 is_stmt 0 view .LVU99
 454 001a 8360     		str	r3, [r0, #8]
 183:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 455              		.loc 1 183 3 is_stmt 1 view .LVU100
 183:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 456              		.loc 1 183 27 is_stmt 0 view .LVU101
 457 001c 0122     		movs	r2, #1
 458 001e 0261     		str	r2, [r0, #16]
 184:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 459              		.loc 1 184 3 is_stmt 1 view .LVU102
 184:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 460              		.loc 1 184 33 is_stmt 0 view .LVU103
 461 0020 0276     		strb	r2, [r0, #24]
 185:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 462              		.loc 1 185 3 is_stmt 1 view .LVU104
 185:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 463              		.loc 1 185 36 is_stmt 0 view .LVU105
 464 0022 80F82030 		strb	r3, [r0, #32]
 186:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 465              		.loc 1 186 3 is_stmt 1 view .LVU106
 186:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 466              		.loc 1 186 35 is_stmt 0 view .LVU107
ARM GAS  /tmp/ccHwkgRn.s 			page 24


 467 0026 C362     		str	r3, [r0, #44]
 187:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 468              		.loc 1 187 3 is_stmt 1 view .LVU108
 187:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 469              		.loc 1 187 31 is_stmt 0 view .LVU109
 470 0028 2049     		ldr	r1, .L32+8
 471 002a 8162     		str	r1, [r0, #40]
 188:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 472              		.loc 1 188 3 is_stmt 1 view .LVU110
 188:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 473              		.loc 1 188 24 is_stmt 0 view .LVU111
 474 002c C360     		str	r3, [r0, #12]
 189:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 475              		.loc 1 189 3 is_stmt 1 view .LVU112
 189:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 476              		.loc 1 189 30 is_stmt 0 view .LVU113
 477 002e 0423     		movs	r3, #4
 478 0030 C361     		str	r3, [r0, #28]
 190:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 479              		.loc 1 190 3 is_stmt 1 view .LVU114
 190:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 480              		.loc 1 190 36 is_stmt 0 view .LVU115
 481 0032 80F83020 		strb	r2, [r0, #48]
 191:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 482              		.loc 1 191 3 is_stmt 1 view .LVU116
 191:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 483              		.loc 1 191 27 is_stmt 0 view .LVU117
 484 0036 4261     		str	r2, [r0, #20]
 192:Core/Src/main.c ****   {
 485              		.loc 1 192 3 is_stmt 1 view .LVU118
 192:Core/Src/main.c ****   {
 486              		.loc 1 192 7 is_stmt 0 view .LVU119
 487 0038 FFF7FEFF 		bl	HAL_ADC_Init
 488              	.LVL11:
 192:Core/Src/main.c ****   {
 489              		.loc 1 192 6 view .LVU120
 490 003c 38BB     		cbnz	r0, .L27
 199:Core/Src/main.c ****   sConfig.Rank = 1;
 491              		.loc 1 199 3 is_stmt 1 view .LVU121
 199:Core/Src/main.c ****   sConfig.Rank = 1;
 492              		.loc 1 199 19 is_stmt 0 view .LVU122
 493 003e 0023     		movs	r3, #0
 494 0040 0093     		str	r3, [sp]
 200:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 495              		.loc 1 200 3 is_stmt 1 view .LVU123
 200:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 496              		.loc 1 200 16 is_stmt 0 view .LVU124
 497 0042 0122     		movs	r2, #1
 498 0044 0192     		str	r2, [sp, #4]
 201:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 499              		.loc 1 201 3 is_stmt 1 view .LVU125
 201:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 500              		.loc 1 201 24 is_stmt 0 view .LVU126
 501 0046 0293     		str	r3, [sp, #8]
 202:Core/Src/main.c ****   {
 502              		.loc 1 202 3 is_stmt 1 view .LVU127
 202:Core/Src/main.c ****   {
ARM GAS  /tmp/ccHwkgRn.s 			page 25


 503              		.loc 1 202 7 is_stmt 0 view .LVU128
 504 0048 6946     		mov	r1, sp
 505 004a 1648     		ldr	r0, .L32
 506 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 507              	.LVL12:
 202:Core/Src/main.c ****   {
 508              		.loc 1 202 6 view .LVU129
 509 0050 F8B9     		cbnz	r0, .L28
 209:Core/Src/main.c ****   sConfig.Rank = 2;
 510              		.loc 1 209 3 is_stmt 1 view .LVU130
 209:Core/Src/main.c ****   sConfig.Rank = 2;
 511              		.loc 1 209 19 is_stmt 0 view .LVU131
 512 0052 0123     		movs	r3, #1
 513 0054 0093     		str	r3, [sp]
 210:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 514              		.loc 1 210 3 is_stmt 1 view .LVU132
 210:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 515              		.loc 1 210 16 is_stmt 0 view .LVU133
 516 0056 0223     		movs	r3, #2
 517 0058 0193     		str	r3, [sp, #4]
 211:Core/Src/main.c ****   {
 518              		.loc 1 211 3 is_stmt 1 view .LVU134
 211:Core/Src/main.c ****   {
 519              		.loc 1 211 7 is_stmt 0 view .LVU135
 520 005a 6946     		mov	r1, sp
 521 005c 1148     		ldr	r0, .L32
 522 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 523              	.LVL13:
 211:Core/Src/main.c ****   {
 524              		.loc 1 211 6 view .LVU136
 525 0062 C0B9     		cbnz	r0, .L29
 218:Core/Src/main.c ****   sConfig.Rank = 3;
 526              		.loc 1 218 3 is_stmt 1 view .LVU137
 218:Core/Src/main.c ****   sConfig.Rank = 3;
 527              		.loc 1 218 19 is_stmt 0 view .LVU138
 528 0064 0223     		movs	r3, #2
 529 0066 0093     		str	r3, [sp]
 219:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 530              		.loc 1 219 3 is_stmt 1 view .LVU139
 219:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 531              		.loc 1 219 16 is_stmt 0 view .LVU140
 532 0068 0323     		movs	r3, #3
 533 006a 0193     		str	r3, [sp, #4]
 220:Core/Src/main.c ****   {
 534              		.loc 1 220 3 is_stmt 1 view .LVU141
 220:Core/Src/main.c ****   {
 535              		.loc 1 220 7 is_stmt 0 view .LVU142
 536 006c 6946     		mov	r1, sp
 537 006e 0D48     		ldr	r0, .L32
 538 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 539              	.LVL14:
 220:Core/Src/main.c ****   {
 540              		.loc 1 220 6 view .LVU143
 541 0074 88B9     		cbnz	r0, .L30
 227:Core/Src/main.c ****   sConfig.Rank = 4;
 542              		.loc 1 227 3 is_stmt 1 view .LVU144
 227:Core/Src/main.c ****   sConfig.Rank = 4;
ARM GAS  /tmp/ccHwkgRn.s 			page 26


 543              		.loc 1 227 19 is_stmt 0 view .LVU145
 544 0076 0323     		movs	r3, #3
 545 0078 0093     		str	r3, [sp]
 228:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 546              		.loc 1 228 3 is_stmt 1 view .LVU146
 228:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 547              		.loc 1 228 16 is_stmt 0 view .LVU147
 548 007a 0423     		movs	r3, #4
 549 007c 0193     		str	r3, [sp, #4]
 229:Core/Src/main.c ****   {
 550              		.loc 1 229 3 is_stmt 1 view .LVU148
 229:Core/Src/main.c ****   {
 551              		.loc 1 229 7 is_stmt 0 view .LVU149
 552 007e 6946     		mov	r1, sp
 553 0080 0848     		ldr	r0, .L32
 554 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 555              	.LVL15:
 229:Core/Src/main.c ****   {
 556              		.loc 1 229 6 view .LVU150
 557 0086 50B9     		cbnz	r0, .L31
 237:Core/Src/main.c **** 
 558              		.loc 1 237 1 view .LVU151
 559 0088 05B0     		add	sp, sp, #20
 560              	.LCFI10:
 561              		.cfi_remember_state
 562              		.cfi_def_cfa_offset 4
 563              		@ sp needed
 564 008a 5DF804FB 		ldr	pc, [sp], #4
 565              	.L27:
 566              	.LCFI11:
 567              		.cfi_restore_state
 194:Core/Src/main.c ****   }
 568              		.loc 1 194 5 is_stmt 1 view .LVU152
 569 008e FFF7FEFF 		bl	Error_Handler
 570              	.LVL16:
 571              	.L28:
 204:Core/Src/main.c ****   }
 572              		.loc 1 204 5 view .LVU153
 573 0092 FFF7FEFF 		bl	Error_Handler
 574              	.LVL17:
 575              	.L29:
 213:Core/Src/main.c ****   }
 576              		.loc 1 213 5 view .LVU154
 577 0096 FFF7FEFF 		bl	Error_Handler
 578              	.LVL18:
 579              	.L30:
 222:Core/Src/main.c ****   }
 580              		.loc 1 222 5 view .LVU155
 581 009a FFF7FEFF 		bl	Error_Handler
 582              	.LVL19:
 583              	.L31:
 231:Core/Src/main.c ****   }
 584              		.loc 1 231 5 view .LVU156
 585 009e FFF7FEFF 		bl	Error_Handler
 586              	.LVL20:
 587              	.L33:
 588 00a2 00BF     		.align	2
ARM GAS  /tmp/ccHwkgRn.s 			page 27


 589              	.L32:
 590 00a4 00000000 		.word	hadc1
 591 00a8 00200140 		.word	1073815552
 592 00ac 0100000F 		.word	251658241
 593              		.cfi_endproc
 594              	.LFE243:
 596              		.section	.text.MX_CAN1_Init,"ax",%progbits
 597              		.align	1
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv4-sp-d16
 603              	MX_CAN1_Init:
 604              	.LFB244:
 245:Core/Src/main.c **** 
 605              		.loc 1 245 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609 0000 08B5     		push	{r3, lr}
 610              	.LCFI12:
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 3, -8
 613              		.cfi_offset 14, -4
 254:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 614              		.loc 1 254 3 view .LVU158
 254:Core/Src/main.c ****   hcan1.Init.Prescaler = 3;
 615              		.loc 1 254 18 is_stmt 0 view .LVU159
 616 0002 0D48     		ldr	r0, .L38
 617 0004 0D4B     		ldr	r3, .L38+4
 618 0006 0360     		str	r3, [r0]
 255:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 619              		.loc 1 255 3 is_stmt 1 view .LVU160
 255:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 620              		.loc 1 255 24 is_stmt 0 view .LVU161
 621 0008 0323     		movs	r3, #3
 622 000a 4360     		str	r3, [r0, #4]
 256:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 623              		.loc 1 256 3 is_stmt 1 view .LVU162
 256:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 624              		.loc 1 256 19 is_stmt 0 view .LVU163
 625 000c 0023     		movs	r3, #0
 626 000e 8360     		str	r3, [r0, #8]
 257:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 627              		.loc 1 257 3 is_stmt 1 view .LVU164
 257:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 628              		.loc 1 257 28 is_stmt 0 view .LVU165
 629 0010 C360     		str	r3, [r0, #12]
 258:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 630              		.loc 1 258 3 is_stmt 1 view .LVU166
 258:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 631              		.loc 1 258 23 is_stmt 0 view .LVU167
 632 0012 4FF42022 		mov	r2, #655360
 633 0016 0261     		str	r2, [r0, #16]
 259:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 634              		.loc 1 259 3 is_stmt 1 view .LVU168
 259:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
ARM GAS  /tmp/ccHwkgRn.s 			page 28


 635              		.loc 1 259 23 is_stmt 0 view .LVU169
 636 0018 4FF48012 		mov	r2, #1048576
 637 001c 4261     		str	r2, [r0, #20]
 260:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 638              		.loc 1 260 3 is_stmt 1 view .LVU170
 260:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 639              		.loc 1 260 32 is_stmt 0 view .LVU171
 640 001e 0376     		strb	r3, [r0, #24]
 261:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 641              		.loc 1 261 3 is_stmt 1 view .LVU172
 261:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 642              		.loc 1 261 25 is_stmt 0 view .LVU173
 643 0020 4376     		strb	r3, [r0, #25]
 262:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 644              		.loc 1 262 3 is_stmt 1 view .LVU174
 262:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 645              		.loc 1 262 25 is_stmt 0 view .LVU175
 646 0022 8376     		strb	r3, [r0, #26]
 263:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 647              		.loc 1 263 3 is_stmt 1 view .LVU176
 263:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 648              		.loc 1 263 33 is_stmt 0 view .LVU177
 649 0024 C376     		strb	r3, [r0, #27]
 264:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 650              		.loc 1 264 3 is_stmt 1 view .LVU178
 264:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 651              		.loc 1 264 32 is_stmt 0 view .LVU179
 652 0026 0377     		strb	r3, [r0, #28]
 265:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 653              		.loc 1 265 3 is_stmt 1 view .LVU180
 265:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 654              		.loc 1 265 35 is_stmt 0 view .LVU181
 655 0028 4377     		strb	r3, [r0, #29]
 266:Core/Src/main.c ****   {
 656              		.loc 1 266 3 is_stmt 1 view .LVU182
 266:Core/Src/main.c ****   {
 657              		.loc 1 266 7 is_stmt 0 view .LVU183
 658 002a FFF7FEFF 		bl	HAL_CAN_Init
 659              	.LVL21:
 266:Core/Src/main.c ****   {
 660              		.loc 1 266 6 view .LVU184
 661 002e 00B9     		cbnz	r0, .L37
 274:Core/Src/main.c **** 
 662              		.loc 1 274 1 view .LVU185
 663 0030 08BD     		pop	{r3, pc}
 664              	.L37:
 268:Core/Src/main.c ****   }
 665              		.loc 1 268 5 is_stmt 1 view .LVU186
 666 0032 FFF7FEFF 		bl	Error_Handler
 667              	.LVL22:
 668              	.L39:
 669 0036 00BF     		.align	2
 670              	.L38:
 671 0038 00000000 		.word	hcan1
 672 003c 00640040 		.word	1073767424
 673              		.cfi_endproc
 674              	.LFE244:
ARM GAS  /tmp/ccHwkgRn.s 			page 29


 676              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 677              		.align	1
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv4-sp-d16
 683              	MX_USART3_UART_Init:
 684              	.LFB252:
 575:Core/Src/main.c **** 
 685              		.loc 1 575 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 08B5     		push	{r3, lr}
 690              	.LCFI13:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
 584:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 694              		.loc 1 584 3 view .LVU188
 584:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 695              		.loc 1 584 19 is_stmt 0 view .LVU189
 696 0002 0A48     		ldr	r0, .L44
 697 0004 0A4B     		ldr	r3, .L44+4
 698 0006 0360     		str	r3, [r0]
 585:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 699              		.loc 1 585 3 is_stmt 1 view .LVU190
 585:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 700              		.loc 1 585 24 is_stmt 0 view .LVU191
 701 0008 4FF4E133 		mov	r3, #115200
 702 000c 4360     		str	r3, [r0, #4]
 586:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 703              		.loc 1 586 3 is_stmt 1 view .LVU192
 586:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 704              		.loc 1 586 26 is_stmt 0 view .LVU193
 705 000e 0023     		movs	r3, #0
 706 0010 8360     		str	r3, [r0, #8]
 587:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 707              		.loc 1 587 3 is_stmt 1 view .LVU194
 587:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 708              		.loc 1 587 24 is_stmt 0 view .LVU195
 709 0012 C360     		str	r3, [r0, #12]
 588:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 710              		.loc 1 588 3 is_stmt 1 view .LVU196
 588:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 711              		.loc 1 588 22 is_stmt 0 view .LVU197
 712 0014 0361     		str	r3, [r0, #16]
 589:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 713              		.loc 1 589 3 is_stmt 1 view .LVU198
 589:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 714              		.loc 1 589 20 is_stmt 0 view .LVU199
 715 0016 0C22     		movs	r2, #12
 716 0018 4261     		str	r2, [r0, #20]
 590:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 717              		.loc 1 590 3 is_stmt 1 view .LVU200
 590:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 718              		.loc 1 590 25 is_stmt 0 view .LVU201
ARM GAS  /tmp/ccHwkgRn.s 			page 30


 719 001a 8361     		str	r3, [r0, #24]
 591:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 720              		.loc 1 591 3 is_stmt 1 view .LVU202
 591:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 721              		.loc 1 591 28 is_stmt 0 view .LVU203
 722 001c C361     		str	r3, [r0, #28]
 592:Core/Src/main.c ****   {
 723              		.loc 1 592 3 is_stmt 1 view .LVU204
 592:Core/Src/main.c ****   {
 724              		.loc 1 592 7 is_stmt 0 view .LVU205
 725 001e FFF7FEFF 		bl	HAL_UART_Init
 726              	.LVL23:
 592:Core/Src/main.c ****   {
 727              		.loc 1 592 6 view .LVU206
 728 0022 00B9     		cbnz	r0, .L43
 600:Core/Src/main.c **** 
 729              		.loc 1 600 1 view .LVU207
 730 0024 08BD     		pop	{r3, pc}
 731              	.L43:
 594:Core/Src/main.c ****   }
 732              		.loc 1 594 5 is_stmt 1 view .LVU208
 733 0026 FFF7FEFF 		bl	Error_Handler
 734              	.LVL24:
 735              	.L45:
 736 002a 00BF     		.align	2
 737              	.L44:
 738 002c 00000000 		.word	huart3
 739 0030 00480040 		.word	1073760256
 740              		.cfi_endproc
 741              	.LFE252:
 743              		.section	.text.MX_TIM1_Init,"ax",%progbits
 744              		.align	1
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu fpv4-sp-d16
 750              	MX_TIM1_Init:
 751              	.LFB251:
 500:Core/Src/main.c **** 
 752              		.loc 1 500 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 88
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 10B5     		push	{r4, lr}
 757              	.LCFI14:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 4, -8
 760              		.cfi_offset 14, -4
 761 0002 96B0     		sub	sp, sp, #88
 762              	.LCFI15:
 763              		.cfi_def_cfa_offset 96
 506:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 764              		.loc 1 506 3 view .LVU210
 506:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 765              		.loc 1 506 26 is_stmt 0 view .LVU211
 766 0004 0024     		movs	r4, #0
 767 0006 1294     		str	r4, [sp, #72]
ARM GAS  /tmp/ccHwkgRn.s 			page 31


 768 0008 1394     		str	r4, [sp, #76]
 769 000a 1494     		str	r4, [sp, #80]
 770 000c 1594     		str	r4, [sp, #84]
 507:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 771              		.loc 1 507 3 is_stmt 1 view .LVU212
 507:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 772              		.loc 1 507 27 is_stmt 0 view .LVU213
 773 000e 1094     		str	r4, [sp, #64]
 774 0010 1194     		str	r4, [sp, #68]
 508:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 775              		.loc 1 508 3 is_stmt 1 view .LVU214
 508:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 776              		.loc 1 508 22 is_stmt 0 view .LVU215
 777 0012 0994     		str	r4, [sp, #36]
 778 0014 0A94     		str	r4, [sp, #40]
 779 0016 0B94     		str	r4, [sp, #44]
 780 0018 0C94     		str	r4, [sp, #48]
 781 001a 0D94     		str	r4, [sp, #52]
 782 001c 0E94     		str	r4, [sp, #56]
 783 001e 0F94     		str	r4, [sp, #60]
 509:Core/Src/main.c **** 
 784              		.loc 1 509 3 is_stmt 1 view .LVU216
 509:Core/Src/main.c **** 
 785              		.loc 1 509 34 is_stmt 0 view .LVU217
 786 0020 2022     		movs	r2, #32
 787 0022 2146     		mov	r1, r4
 788 0024 01A8     		add	r0, sp, #4
 789 0026 FFF7FEFF 		bl	memset
 790              	.LVL25:
 514:Core/Src/main.c ****   hdma_tim1_ch1.Init.Prescaler = 0;
 791              		.loc 1 514 3 is_stmt 1 view .LVU218
 514:Core/Src/main.c ****   hdma_tim1_ch1.Init.Prescaler = 0;
 792              		.loc 1 514 26 is_stmt 0 view .LVU219
 793 002a 2948     		ldr	r0, .L60
 794 002c 294B     		ldr	r3, .L60+4
 795 002e 0360     		str	r3, [r0]
 515:Core/Src/main.c ****   hdma_tim1_ch1.Init.CounterMode = TIM_COUNTERMODE_UP;
 796              		.loc 1 515 3 is_stmt 1 view .LVU220
 515:Core/Src/main.c ****   hdma_tim1_ch1.Init.CounterMode = TIM_COUNTERMODE_UP;
 797              		.loc 1 515 32 is_stmt 0 view .LVU221
 798 0030 4460     		str	r4, [r0, #4]
 516:Core/Src/main.c ****   hdma_tim1_ch1.Init.Period = 200;
 799              		.loc 1 516 3 is_stmt 1 view .LVU222
 516:Core/Src/main.c ****   hdma_tim1_ch1.Init.Period = 200;
 800              		.loc 1 516 34 is_stmt 0 view .LVU223
 801 0032 8460     		str	r4, [r0, #8]
 517:Core/Src/main.c ****   hdma_tim1_ch1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 802              		.loc 1 517 3 is_stmt 1 view .LVU224
 517:Core/Src/main.c ****   hdma_tim1_ch1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 803              		.loc 1 517 29 is_stmt 0 view .LVU225
 804 0034 C823     		movs	r3, #200
 805 0036 C360     		str	r3, [r0, #12]
 518:Core/Src/main.c ****   hdma_tim1_ch1.Init.RepetitionCounter = 0;
 806              		.loc 1 518 3 is_stmt 1 view .LVU226
 518:Core/Src/main.c ****   hdma_tim1_ch1.Init.RepetitionCounter = 0;
 807              		.loc 1 518 36 is_stmt 0 view .LVU227
 808 0038 0461     		str	r4, [r0, #16]
ARM GAS  /tmp/ccHwkgRn.s 			page 32


 519:Core/Src/main.c ****   hdma_tim1_ch1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 809              		.loc 1 519 3 is_stmt 1 view .LVU228
 519:Core/Src/main.c ****   hdma_tim1_ch1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 810              		.loc 1 519 40 is_stmt 0 view .LVU229
 811 003a 4461     		str	r4, [r0, #20]
 520:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&hdma_tim1_ch1) != HAL_OK)
 812              		.loc 1 520 3 is_stmt 1 view .LVU230
 520:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&hdma_tim1_ch1) != HAL_OK)
 813              		.loc 1 520 40 is_stmt 0 view .LVU231
 814 003c 8461     		str	r4, [r0, #24]
 521:Core/Src/main.c ****   {
 815              		.loc 1 521 3 is_stmt 1 view .LVU232
 521:Core/Src/main.c ****   {
 816              		.loc 1 521 7 is_stmt 0 view .LVU233
 817 003e FFF7FEFF 		bl	HAL_TIM_Base_Init
 818              	.LVL26:
 521:Core/Src/main.c ****   {
 819              		.loc 1 521 6 view .LVU234
 820 0042 0028     		cmp	r0, #0
 821 0044 37D1     		bne	.L54
 525:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&hdma_tim1_ch1, &sClockSourceConfig) != HAL_OK)
 822              		.loc 1 525 3 is_stmt 1 view .LVU235
 525:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&hdma_tim1_ch1, &sClockSourceConfig) != HAL_OK)
 823              		.loc 1 525 34 is_stmt 0 view .LVU236
 824 0046 4FF48053 		mov	r3, #4096
 825 004a 1293     		str	r3, [sp, #72]
 526:Core/Src/main.c ****   {
 826              		.loc 1 526 3 is_stmt 1 view .LVU237
 526:Core/Src/main.c ****   {
 827              		.loc 1 526 7 is_stmt 0 view .LVU238
 828 004c 12A9     		add	r1, sp, #72
 829 004e 2048     		ldr	r0, .L60
 830 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 831              	.LVL27:
 526:Core/Src/main.c ****   {
 832              		.loc 1 526 6 view .LVU239
 833 0054 0028     		cmp	r0, #0
 834 0056 30D1     		bne	.L55
 530:Core/Src/main.c ****   {
 835              		.loc 1 530 3 is_stmt 1 view .LVU240
 530:Core/Src/main.c ****   {
 836              		.loc 1 530 7 is_stmt 0 view .LVU241
 837 0058 1D48     		ldr	r0, .L60
 838 005a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 839              	.LVL28:
 530:Core/Src/main.c ****   {
 840              		.loc 1 530 6 view .LVU242
 841 005e 0028     		cmp	r0, #0
 842 0060 2DD1     		bne	.L56
 534:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 843              		.loc 1 534 3 is_stmt 1 view .LVU243
 534:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 844              		.loc 1 534 37 is_stmt 0 view .LVU244
 845 0062 0023     		movs	r3, #0
 846 0064 1093     		str	r3, [sp, #64]
 535:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&hdma_tim1_ch1, &sMasterConfig) != HAL_OK)
 847              		.loc 1 535 3 is_stmt 1 view .LVU245
ARM GAS  /tmp/ccHwkgRn.s 			page 33


 535:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&hdma_tim1_ch1, &sMasterConfig) != HAL_OK)
 848              		.loc 1 535 33 is_stmt 0 view .LVU246
 849 0066 1193     		str	r3, [sp, #68]
 536:Core/Src/main.c ****   {
 850              		.loc 1 536 3 is_stmt 1 view .LVU247
 536:Core/Src/main.c ****   {
 851              		.loc 1 536 7 is_stmt 0 view .LVU248
 852 0068 10A9     		add	r1, sp, #64
 853 006a 1948     		ldr	r0, .L60
 854 006c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 855              	.LVL29:
 536:Core/Src/main.c ****   {
 856              		.loc 1 536 6 view .LVU249
 857 0070 38BB     		cbnz	r0, .L57
 540:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 858              		.loc 1 540 3 is_stmt 1 view .LVU250
 540:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 859              		.loc 1 540 20 is_stmt 0 view .LVU251
 860 0072 6023     		movs	r3, #96
 861 0074 0993     		str	r3, [sp, #36]
 541:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 862              		.loc 1 541 3 is_stmt 1 view .LVU252
 541:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 863              		.loc 1 541 19 is_stmt 0 view .LVU253
 864 0076 0022     		movs	r2, #0
 865 0078 0A92     		str	r2, [sp, #40]
 542:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 866              		.loc 1 542 3 is_stmt 1 view .LVU254
 542:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 867              		.loc 1 542 24 is_stmt 0 view .LVU255
 868 007a 0B92     		str	r2, [sp, #44]
 543:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 869              		.loc 1 543 3 is_stmt 1 view .LVU256
 543:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 870              		.loc 1 543 25 is_stmt 0 view .LVU257
 871 007c 0C92     		str	r2, [sp, #48]
 544:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 872              		.loc 1 544 3 is_stmt 1 view .LVU258
 544:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 873              		.loc 1 544 24 is_stmt 0 view .LVU259
 874 007e 0D92     		str	r2, [sp, #52]
 545:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 875              		.loc 1 545 3 is_stmt 1 view .LVU260
 545:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 876              		.loc 1 545 25 is_stmt 0 view .LVU261
 877 0080 0E92     		str	r2, [sp, #56]
 546:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&hdma_tim1_ch1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 878              		.loc 1 546 3 is_stmt 1 view .LVU262
 546:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&hdma_tim1_ch1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 879              		.loc 1 546 26 is_stmt 0 view .LVU263
 880 0082 0F92     		str	r2, [sp, #60]
 547:Core/Src/main.c ****   {
 881              		.loc 1 547 3 is_stmt 1 view .LVU264
 547:Core/Src/main.c ****   {
 882              		.loc 1 547 7 is_stmt 0 view .LVU265
 883 0084 09A9     		add	r1, sp, #36
 884 0086 1248     		ldr	r0, .L60
ARM GAS  /tmp/ccHwkgRn.s 			page 34


 885 0088 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 886              	.LVL30:
 547:Core/Src/main.c ****   {
 887              		.loc 1 547 6 view .LVU266
 888 008c D8B9     		cbnz	r0, .L58
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 889              		.loc 1 551 3 is_stmt 1 view .LVU267
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 890              		.loc 1 551 40 is_stmt 0 view .LVU268
 891 008e 0023     		movs	r3, #0
 892 0090 0193     		str	r3, [sp, #4]
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 893              		.loc 1 552 3 is_stmt 1 view .LVU269
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 894              		.loc 1 552 41 is_stmt 0 view .LVU270
 895 0092 0293     		str	r3, [sp, #8]
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 896              		.loc 1 553 3 is_stmt 1 view .LVU271
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 897              		.loc 1 553 34 is_stmt 0 view .LVU272
 898 0094 0393     		str	r3, [sp, #12]
 554:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 899              		.loc 1 554 3 is_stmt 1 view .LVU273
 554:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 900              		.loc 1 554 33 is_stmt 0 view .LVU274
 901 0096 0493     		str	r3, [sp, #16]
 555:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 902              		.loc 1 555 3 is_stmt 1 view .LVU275
 555:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 903              		.loc 1 555 35 is_stmt 0 view .LVU276
 904 0098 0593     		str	r3, [sp, #20]
 556:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 905              		.loc 1 556 3 is_stmt 1 view .LVU277
 556:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 906              		.loc 1 556 38 is_stmt 0 view .LVU278
 907 009a 4FF40052 		mov	r2, #8192
 908 009e 0692     		str	r2, [sp, #24]
 557:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&hdma_tim1_ch1, &sBreakDeadTimeConfig) != HAL_OK)
 909              		.loc 1 557 3 is_stmt 1 view .LVU279
 557:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&hdma_tim1_ch1, &sBreakDeadTimeConfig) != HAL_OK)
 910              		.loc 1 557 40 is_stmt 0 view .LVU280
 911 00a0 0893     		str	r3, [sp, #32]
 558:Core/Src/main.c ****   {
 912              		.loc 1 558 3 is_stmt 1 view .LVU281
 558:Core/Src/main.c ****   {
 913              		.loc 1 558 7 is_stmt 0 view .LVU282
 914 00a2 01A9     		add	r1, sp, #4
 915 00a4 0A48     		ldr	r0, .L60
 916 00a6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 917              	.LVL31:
 558:Core/Src/main.c ****   {
 918              		.loc 1 558 6 view .LVU283
 919 00aa 70B9     		cbnz	r0, .L59
 565:Core/Src/main.c **** 
 920              		.loc 1 565 3 is_stmt 1 view .LVU284
 921 00ac 0848     		ldr	r0, .L60
 922 00ae FFF7FEFF 		bl	HAL_TIM_MspPostInit
ARM GAS  /tmp/ccHwkgRn.s 			page 35


 923              	.LVL32:
 567:Core/Src/main.c **** 
 924              		.loc 1 567 1 is_stmt 0 view .LVU285
 925 00b2 16B0     		add	sp, sp, #88
 926              	.LCFI16:
 927              		.cfi_remember_state
 928              		.cfi_def_cfa_offset 8
 929              		@ sp needed
 930 00b4 10BD     		pop	{r4, pc}
 931              	.L54:
 932              	.LCFI17:
 933              		.cfi_restore_state
 523:Core/Src/main.c ****   }
 934              		.loc 1 523 5 is_stmt 1 view .LVU286
 935 00b6 FFF7FEFF 		bl	Error_Handler
 936              	.LVL33:
 937              	.L55:
 528:Core/Src/main.c ****   }
 938              		.loc 1 528 5 view .LVU287
 939 00ba FFF7FEFF 		bl	Error_Handler
 940              	.LVL34:
 941              	.L56:
 532:Core/Src/main.c ****   }
 942              		.loc 1 532 5 view .LVU288
 943 00be FFF7FEFF 		bl	Error_Handler
 944              	.LVL35:
 945              	.L57:
 538:Core/Src/main.c ****   }
 946              		.loc 1 538 5 view .LVU289
 947 00c2 FFF7FEFF 		bl	Error_Handler
 948              	.LVL36:
 949              	.L58:
 549:Core/Src/main.c ****   }
 950              		.loc 1 549 5 view .LVU290
 951 00c6 FFF7FEFF 		bl	Error_Handler
 952              	.LVL37:
 953              	.L59:
 560:Core/Src/main.c ****   }
 954              		.loc 1 560 5 view .LVU291
 955 00ca FFF7FEFF 		bl	Error_Handler
 956              	.LVL38:
 957              	.L61:
 958 00ce 00BF     		.align	2
 959              	.L60:
 960 00d0 00000000 		.word	hdma_tim1_ch1
 961 00d4 00000140 		.word	1073807360
 962              		.cfi_endproc
 963              	.LFE251:
 965              		.section	.text.SystemClock_Config,"ax",%progbits
 966              		.align	1
 967              		.global	SystemClock_Config
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	SystemClock_Config:
 974              	.LFB242:
ARM GAS  /tmp/ccHwkgRn.s 			page 36


 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 975              		.loc 1 119 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 80
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 00B5     		push	{lr}
 980              	.LCFI18:
 981              		.cfi_def_cfa_offset 4
 982              		.cfi_offset 14, -4
 983 0002 95B0     		sub	sp, sp, #84
 984              	.LCFI19:
 985              		.cfi_def_cfa_offset 88
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 986              		.loc 1 120 3 view .LVU293
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 987              		.loc 1 120 22 is_stmt 0 view .LVU294
 988 0004 3022     		movs	r2, #48
 989 0006 0021     		movs	r1, #0
 990 0008 08A8     		add	r0, sp, #32
 991 000a FFF7FEFF 		bl	memset
 992              	.LVL39:
 121:Core/Src/main.c **** 
 993              		.loc 1 121 3 is_stmt 1 view .LVU295
 121:Core/Src/main.c **** 
 994              		.loc 1 121 22 is_stmt 0 view .LVU296
 995 000e 0023     		movs	r3, #0
 996 0010 0393     		str	r3, [sp, #12]
 997 0012 0493     		str	r3, [sp, #16]
 998 0014 0593     		str	r3, [sp, #20]
 999 0016 0693     		str	r3, [sp, #24]
 1000 0018 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1001              		.loc 1 125 3 is_stmt 1 view .LVU297
 1002              	.LBB13:
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1003              		.loc 1 125 3 view .LVU298
 1004 001a 0193     		str	r3, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1005              		.loc 1 125 3 view .LVU299
 1006 001c 214A     		ldr	r2, .L68
 1007 001e 116C     		ldr	r1, [r2, #64]
 1008 0020 41F08051 		orr	r1, r1, #268435456
 1009 0024 1164     		str	r1, [r2, #64]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1010              		.loc 1 125 3 view .LVU300
 1011 0026 126C     		ldr	r2, [r2, #64]
 1012 0028 02F08052 		and	r2, r2, #268435456
 1013 002c 0192     		str	r2, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1014              		.loc 1 125 3 view .LVU301
 1015 002e 019A     		ldr	r2, [sp, #4]
 1016              	.LBE13:
 126:Core/Src/main.c **** 
 1017              		.loc 1 126 3 view .LVU302
 1018              	.LBB14:
 126:Core/Src/main.c **** 
 1019              		.loc 1 126 3 view .LVU303
ARM GAS  /tmp/ccHwkgRn.s 			page 37


 1020 0030 0293     		str	r3, [sp, #8]
 126:Core/Src/main.c **** 
 1021              		.loc 1 126 3 view .LVU304
 1022 0032 1D4B     		ldr	r3, .L68+4
 1023 0034 1A68     		ldr	r2, [r3]
 1024 0036 42F48042 		orr	r2, r2, #16384
 1025 003a 1A60     		str	r2, [r3]
 126:Core/Src/main.c **** 
 1026              		.loc 1 126 3 view .LVU305
 1027 003c 1B68     		ldr	r3, [r3]
 1028 003e 03F48043 		and	r3, r3, #16384
 1029 0042 0293     		str	r3, [sp, #8]
 126:Core/Src/main.c **** 
 1030              		.loc 1 126 3 view .LVU306
 1031 0044 029B     		ldr	r3, [sp, #8]
 1032              	.LBE14:
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1033              		.loc 1 131 3 view .LVU307
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1034              		.loc 1 131 36 is_stmt 0 view .LVU308
 1035 0046 0923     		movs	r3, #9
 1036 0048 0893     		str	r3, [sp, #32]
 132:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1037              		.loc 1 132 3 is_stmt 1 view .LVU309
 132:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1038              		.loc 1 132 30 is_stmt 0 view .LVU310
 1039 004a 4FF48033 		mov	r3, #65536
 1040 004e 0993     		str	r3, [sp, #36]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1041              		.loc 1 133 3 is_stmt 1 view .LVU311
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1042              		.loc 1 133 30 is_stmt 0 view .LVU312
 1043 0050 0123     		movs	r3, #1
 1044 0052 0D93     		str	r3, [sp, #52]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1045              		.loc 1 134 3 is_stmt 1 view .LVU313
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1046              		.loc 1 134 34 is_stmt 0 view .LVU314
 1047 0054 0223     		movs	r3, #2
 1048 0056 0E93     		str	r3, [sp, #56]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1049              		.loc 1 135 3 is_stmt 1 view .LVU315
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1050              		.loc 1 135 35 is_stmt 0 view .LVU316
 1051 0058 4FF48002 		mov	r2, #4194304
 1052 005c 0F92     		str	r2, [sp, #60]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1053              		.loc 1 136 3 is_stmt 1 view .LVU317
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1054              		.loc 1 136 30 is_stmt 0 view .LVU318
 1055 005e 0422     		movs	r2, #4
 1056 0060 1092     		str	r2, [sp, #64]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1057              		.loc 1 137 3 is_stmt 1 view .LVU319
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1058              		.loc 1 137 30 is_stmt 0 view .LVU320
 1059 0062 A822     		movs	r2, #168
ARM GAS  /tmp/ccHwkgRn.s 			page 38


 1060 0064 1192     		str	r2, [sp, #68]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1061              		.loc 1 138 3 is_stmt 1 view .LVU321
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1062              		.loc 1 138 30 is_stmt 0 view .LVU322
 1063 0066 1293     		str	r3, [sp, #72]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1064              		.loc 1 139 3 is_stmt 1 view .LVU323
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1065              		.loc 1 139 30 is_stmt 0 view .LVU324
 1066 0068 0723     		movs	r3, #7
 1067 006a 1393     		str	r3, [sp, #76]
 140:Core/Src/main.c ****   {
 1068              		.loc 1 140 3 is_stmt 1 view .LVU325
 140:Core/Src/main.c ****   {
 1069              		.loc 1 140 7 is_stmt 0 view .LVU326
 1070 006c 08A8     		add	r0, sp, #32
 1071 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1072              	.LVL40:
 140:Core/Src/main.c ****   {
 1073              		.loc 1 140 6 view .LVU327
 1074 0072 98B9     		cbnz	r0, .L66
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1075              		.loc 1 147 3 is_stmt 1 view .LVU328
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1076              		.loc 1 147 31 is_stmt 0 view .LVU329
 1077 0074 0F23     		movs	r3, #15
 1078 0076 0393     		str	r3, [sp, #12]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1079              		.loc 1 149 3 is_stmt 1 view .LVU330
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1080              		.loc 1 149 34 is_stmt 0 view .LVU331
 1081 0078 0223     		movs	r3, #2
 1082 007a 0493     		str	r3, [sp, #16]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1083              		.loc 1 150 3 is_stmt 1 view .LVU332
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1084              		.loc 1 150 35 is_stmt 0 view .LVU333
 1085 007c 0023     		movs	r3, #0
 1086 007e 0593     		str	r3, [sp, #20]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1087              		.loc 1 151 3 is_stmt 1 view .LVU334
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1088              		.loc 1 151 36 is_stmt 0 view .LVU335
 1089 0080 4FF4A053 		mov	r3, #5120
 1090 0084 0693     		str	r3, [sp, #24]
 152:Core/Src/main.c **** 
 1091              		.loc 1 152 3 is_stmt 1 view .LVU336
 152:Core/Src/main.c **** 
 1092              		.loc 1 152 36 is_stmt 0 view .LVU337
 1093 0086 4FF48053 		mov	r3, #4096
 1094 008a 0793     		str	r3, [sp, #28]
 154:Core/Src/main.c ****   {
 1095              		.loc 1 154 3 is_stmt 1 view .LVU338
 154:Core/Src/main.c ****   {
 1096              		.loc 1 154 7 is_stmt 0 view .LVU339
 1097 008c 0521     		movs	r1, #5
ARM GAS  /tmp/ccHwkgRn.s 			page 39


 1098 008e 03A8     		add	r0, sp, #12
 1099 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1100              	.LVL41:
 154:Core/Src/main.c ****   {
 1101              		.loc 1 154 6 view .LVU340
 1102 0094 20B9     		cbnz	r0, .L67
 158:Core/Src/main.c **** 
 1103              		.loc 1 158 1 view .LVU341
 1104 0096 15B0     		add	sp, sp, #84
 1105              	.LCFI20:
 1106              		.cfi_remember_state
 1107              		.cfi_def_cfa_offset 4
 1108              		@ sp needed
 1109 0098 5DF804FB 		ldr	pc, [sp], #4
 1110              	.L66:
 1111              	.LCFI21:
 1112              		.cfi_restore_state
 142:Core/Src/main.c ****   }
 1113              		.loc 1 142 5 is_stmt 1 view .LVU342
 1114 009c FFF7FEFF 		bl	Error_Handler
 1115              	.LVL42:
 1116              	.L67:
 156:Core/Src/main.c ****   }
 1117              		.loc 1 156 5 view .LVU343
 1118 00a0 FFF7FEFF 		bl	Error_Handler
 1119              	.LVL43:
 1120              	.L69:
 1121              		.align	2
 1122              	.L68:
 1123 00a4 00380240 		.word	1073887232
 1124 00a8 00700040 		.word	1073770496
 1125              		.cfi_endproc
 1126              	.LFE242:
 1128              		.section	.text.main,"ax",%progbits
 1129              		.align	1
 1130              		.global	main
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	main:
 1137              	.LFB238:
  58:Core/Src/main.c ****   HAL_Init();
 1138              		.loc 1 58 16 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 10B5     		push	{r4, lr}
 1143              	.LCFI22:
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 4, -8
 1146              		.cfi_offset 14, -4
 1147 0002 84B0     		sub	sp, sp, #16
 1148              	.LCFI23:
 1149              		.cfi_def_cfa_offset 24
  59:Core/Src/main.c **** 
 1150              		.loc 1 59 3 view .LVU345
ARM GAS  /tmp/ccHwkgRn.s 			page 40


 1151 0004 FFF7FEFF 		bl	HAL_Init
 1152              	.LVL44:
  61:Core/Src/main.c **** 
 1153              		.loc 1 61 3 view .LVU346
 1154 0008 FFF7FEFF 		bl	SystemClock_Config
 1155              	.LVL45:
  63:Core/Src/main.c ****   MX_GPIO_Init();
 1156              		.loc 1 63 3 view .LVU347
 1157 000c FFF7FEFF 		bl	MX_DMA_Init
 1158              	.LVL46:
  64:Core/Src/main.c ****   MX_ADC1_Init();
 1159              		.loc 1 64 3 view .LVU348
 1160 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1161              	.LVL47:
  65:Core/Src/main.c ****   MX_CAN1_Init();
 1162              		.loc 1 65 3 view .LVU349
 1163 0014 FFF7FEFF 		bl	MX_ADC1_Init
 1164              	.LVL48:
  66:Core/Src/main.c ****   MX_USART3_UART_Init();
 1165              		.loc 1 66 3 view .LVU350
 1166 0018 FFF7FEFF 		bl	MX_CAN1_Init
 1167              	.LVL49:
  67:Core/Src/main.c ****   MX_TIM1_Init();
 1168              		.loc 1 67 3 view .LVU351
 1169 001c FFF7FEFF 		bl	MX_USART3_UART_Init
 1170              	.LVL50:
  68:Core/Src/main.c **** 
 1171              		.loc 1 68 3 view .LVU352
 1172 0020 FFF7FEFF 		bl	MX_TIM1_Init
 1173              	.LVL51:
  70:Core/Src/main.c ****   uint8_t loadCellDataFrame[8];
 1174              		.loc 1 70 3 view .LVU353
  71:Core/Src/main.c ****   CAN_loadCellHandler.StdId = 0x5AE;
 1175              		.loc 1 71 3 view .LVU354
  72:Core/Src/main.c ****   CAN_loadCellHandler.ExtId = 0x5AE;
 1176              		.loc 1 72 3 view .LVU355
  73:Core/Src/main.c ****   CAN_loadCellHandler.RTR = CAN_RTR_DATA;
 1177              		.loc 1 73 3 view .LVU356
  74:Core/Src/main.c ****   CAN_loadCellHandler.IDE = CAN_ID_STD;
 1178              		.loc 1 74 3 view .LVU357
  75:Core/Src/main.c ****   CAN_loadCellHandler.DLC = sizeof(loadCellDataFrame);
 1179              		.loc 1 75 3 view .LVU358
  76:Core/Src/main.c **** 
 1180              		.loc 1 76 3 view .LVU359
  78:Core/Src/main.c **** 
 1181              		.loc 1 78 3 view .LVU360
  81:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)adcData, ADC_BUF_LEN);
 1182              		.loc 1 81 3 view .LVU361
  81:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t *)adcData, ADC_BUF_LEN);
 1183              		.loc 1 81 26 is_stmt 0 view .LVU362
 1184 0024 FFF7FEFF 		bl	HAL_GetTick
 1185              	.LVL52:
  82:Core/Src/main.c ****   //while(HAL_GetTick() - currentTime <= 3000) {
 1186              		.loc 1 82 3 is_stmt 1 view .LVU363
 1187 0028 4FF48052 		mov	r2, #4096
 1188 002c 0E49     		ldr	r1, .L73
 1189 002e 0F48     		ldr	r0, .L73+4
ARM GAS  /tmp/ccHwkgRn.s 			page 41


 1190 0030 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1191              	.LVL53:
 1192              	.L71:
  84:Core/Src/main.c ****     snprintf(UART_txBuf, TX_BUF_LEN, "PA0: %d, PA1: %d, PA2: %d, PA3: %d\r\n", adcData[0], adcData[
 1193              		.loc 1 84 3 discriminator 1 view .LVU364
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1194              		.loc 1 85 5 discriminator 1 view .LVU365
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1195              		.loc 1 85 87 is_stmt 0 discriminator 1 view .LVU366
 1196 0034 0C4B     		ldr	r3, .L73
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1197              		.loc 1 85 99 discriminator 1 view .LVU367
 1198 0036 5A88     		ldrh	r2, [r3, #2]
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1199              		.loc 1 85 111 discriminator 1 view .LVU368
 1200 0038 9988     		ldrh	r1, [r3, #4]
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1201              		.loc 1 85 123 discriminator 1 view .LVU369
 1202 003a D888     		ldrh	r0, [r3, #6]
  85:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t *)UART_txBuf, sizeof(UART_txBuf), HAL_MAX_DELAY);
 1203              		.loc 1 85 5 discriminator 1 view .LVU370
 1204 003c 0C4C     		ldr	r4, .L73+8
 1205 003e 0290     		str	r0, [sp, #8]
 1206 0040 0191     		str	r1, [sp, #4]
 1207 0042 0092     		str	r2, [sp]
 1208 0044 1B88     		ldrh	r3, [r3]
 1209 0046 0B4A     		ldr	r2, .L73+12
 1210 0048 6421     		movs	r1, #100
 1211 004a 2046     		mov	r0, r4
 1212 004c FFF7FEFF 		bl	snprintf
 1213              	.LVL54:
  86:Core/Src/main.c ****     HAL_Delay(100);
 1214              		.loc 1 86 5 is_stmt 1 discriminator 1 view .LVU371
 1215 0050 4FF0FF33 		mov	r3, #-1
 1216 0054 6422     		movs	r2, #100
 1217 0056 2146     		mov	r1, r4
 1218 0058 0748     		ldr	r0, .L73+16
 1219 005a FFF7FEFF 		bl	HAL_UART_Transmit
 1220              	.LVL55:
  87:Core/Src/main.c ****   }
 1221              		.loc 1 87 5 discriminator 1 view .LVU372
 1222 005e 6420     		movs	r0, #100
 1223 0060 FFF7FEFF 		bl	HAL_Delay
 1224              	.LVL56:
 1225 0064 E6E7     		b	.L71
 1226              	.L74:
 1227 0066 00BF     		.align	2
 1228              	.L73:
 1229 0068 00000000 		.word	adcData
 1230 006c 00000000 		.word	hadc1
 1231 0070 00000000 		.word	UART_txBuf
 1232 0074 00000000 		.word	.LC0
 1233 0078 00000000 		.word	huart3
 1234              		.cfi_endproc
 1235              	.LFE238:
 1237              		.global	adc_conv_complete_flag
 1238              		.comm	UART_txBuf,100,4
ARM GAS  /tmp/ccHwkgRn.s 			page 42


 1239              		.comm	adcData,8192,4
 1240              		.comm	hdma_tim1_ch1,72,4
 1241              		.comm	hdma_adc1,96,4
 1242              		.comm	can1Filter,40,4
 1243              		.comm	hcan2,40,4
 1244              		.comm	hcan1,40,4
 1245              		.comm	huart3,68,4
 1246              		.comm	hspi2,88,4
 1247              		.comm	hspi1,88,4
 1248              		.comm	hsd,132,4
 1249              		.comm	hrtc,32,4
 1250              		.comm	hi2c1,84,4
 1251              		.comm	hadc1,72,4
 1252              		.section	.bss.adc_conv_complete_flag,"aw",%nobits
 1255              	adc_conv_complete_flag:
 1256 0000 00       		.space	1
 1257              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1258              		.align	2
 1259              	.LC0:
 1260 0000 5041303A 		.ascii	"PA0: %d, PA1: %d, PA2: %d, PA3: %d\015\012\000"
 1260      2025642C 
 1260      20504131 
 1260      3A202564 
 1260      2C205041 
 1261              		.text
 1262              	.Letext0:
 1263              		.file 3 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 1264              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1265              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1266              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1267              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1268              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1269              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1270              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1271              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1272              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1273              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1274              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1275              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1276              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1277              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1278              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1279              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1280              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1281              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1282              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1283              		.file 23 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 1284              		.file 24 "/usr/include/newlib/sys/_types.h"
 1285              		.file 25 "/usr/include/newlib/sys/reent.h"
 1286              		.file 26 "/usr/include/newlib/sys/lock.h"
 1287              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1288              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1289              		.file 29 "Core/Inc/main.h"
 1290              		.file 30 "/usr/include/newlib/stdio.h"
 1291              		.file 31 "<built-in>"
ARM GAS  /tmp/ccHwkgRn.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHwkgRn.s:18     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:25     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccHwkgRn.s:86     .text.MX_DMA_Init:0000000000000040 $d
     /tmp/ccHwkgRn.s:91     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:97     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccHwkgRn.s:246    .text.MX_GPIO_Init:00000000000000b0 $d
     /tmp/ccHwkgRn.s:252    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccHwkgRn.s:259    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccHwkgRn.s:273    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccHwkgRn.s:280    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccHwkgRn.s:305    .text.HAL_ADC_ConvCpltCallback:000000000000000c $d
     /tmp/ccHwkgRn.s:310    .text.configureCAN1:0000000000000000 $t
     /tmp/ccHwkgRn.s:317    .text.configureCAN1:0000000000000000 configureCAN1
     /tmp/ccHwkgRn.s:373    .text.configureCAN1:000000000000002c $d
                            *COM*:0000000000000028 can1Filter
                            *COM*:0000000000000028 hcan1
     /tmp/ccHwkgRn.s:379    .text.Error_Handler:0000000000000000 $t
     /tmp/ccHwkgRn.s:386    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccHwkgRn.s:417    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:423    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccHwkgRn.s:590    .text.MX_ADC1_Init:00000000000000a4 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccHwkgRn.s:597    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:603    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccHwkgRn.s:671    .text.MX_CAN1_Init:0000000000000038 $d
     /tmp/ccHwkgRn.s:677    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:683    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccHwkgRn.s:738    .text.MX_USART3_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart3
     /tmp/ccHwkgRn.s:744    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccHwkgRn.s:750    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccHwkgRn.s:960    .text.MX_TIM1_Init:00000000000000d0 $d
                            *COM*:0000000000000048 hdma_tim1_ch1
     /tmp/ccHwkgRn.s:966    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccHwkgRn.s:973    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccHwkgRn.s:1123   .text.SystemClock_Config:00000000000000a4 $d
     /tmp/ccHwkgRn.s:1129   .text.main:0000000000000000 $t
     /tmp/ccHwkgRn.s:1136   .text.main:0000000000000000 main
     /tmp/ccHwkgRn.s:1229   .text.main:0000000000000068 $d
                            *COM*:0000000000002000 adcData
                            *COM*:0000000000000064 UART_txBuf
     /tmp/ccHwkgRn.s:1255   .bss.adc_conv_complete_flag:0000000000000000 adc_conv_complete_flag
                            *COM*:0000000000000060 hdma_adc1
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000058 hspi2
                            *COM*:0000000000000058 hspi1
                            *COM*:0000000000000084 hsd
                            *COM*:0000000000000020 hrtc
                            *COM*:0000000000000054 hi2c1
     /tmp/ccHwkgRn.s:1256   .bss.adc_conv_complete_flag:0000000000000000 $d
     /tmp/ccHwkgRn.s:1258   .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccHwkgRn.s 			page 44


HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_ADC_Start_DMA
snprintf
HAL_UART_Transmit
HAL_Delay
